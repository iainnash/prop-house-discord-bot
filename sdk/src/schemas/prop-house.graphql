"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type Auction {
  """All auctions are issued a unique ID number"""
  id: Int!
  title: String!

  """After the Start Time users may submit proposals"""
  startTime: DateTime!

  """Users may submit proposals up until Proposal End Time"""
  proposalEndTime: DateTime!

  """
  Between Proposal End Time and Voting End Time, users may submit votes for proposals
  """
  votingEndTime: DateTime!

  """The number of currency units paid to each winner"""
  fundingAmount: Float!

  """The currency for the auction that winners will be paid in"""
  currencyType: String!
  description: String!

  """The number of winners that will be paid from the auction"""
  numWinners: Int!
  proposals: [Proposal!]!
  community: Community!
  createdDate: DateTime!
  lastUpdatedDate: DateTime!
  balanceBlockTag: String!

  """The current status of the Auction. See AuctionStatus for more detail."""
  status: AuctionStatus!
}

"""The Auction's current status"""
enum AuctionStatus {
  Upcoming

  """The auction is accepting proposals."""
  Open

  """The auction is accepting votes, proposals are closed."""
  Voting

  """The auction has closed and is not accepting votes or proposals."""
  Closed
}

type Community {
  id: Int!

  """The contract address that is queried for balances"""
  contractAddress: String!
  name: String!
  profileImageUrl: String!
  description: String!
  numAuctions: Int!
  auctions: [Auction!]!
  createdDate: DateTime!
  lastUpdatedDate: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input PartialAuctionInput {
  """All auctions are issued a unique ID number"""
  id: Int
  title: String

  """After the Start Time users may submit proposals"""
  startTime: DateTime

  """Users may submit proposals up until Proposal End Time"""
  proposalEndTime: DateTime

  """
  Between Proposal End Time and Voting End Time, users may submit votes for proposals
  """
  votingEndTime: DateTime

  """The number of currency units paid to each winner"""
  fundingAmount: Float

  """The currency for the auction that winners will be paid in"""
  currencyType: String
  description: String

  """The number of winners that will be paid from the auction"""
  numWinners: Int
  createdDate: DateTime
  lastUpdatedDate: DateTime
  balanceBlockTag: String
}

type Proposal {
  address: String!
  signedData: SignedDataPayload!
  id: Int!
  title: String!
  what: String!
  tldr: String!
  auction: Auction!
  auctionId: Int!
  votes: [Vote!]!
  voteCount: Float!
  createdDate: DateTime!
  lastUpdatedDate: DateTime!
}

type Query {
  """Fetch an Auction based on its ID"""
  auction(id: Int!): Auction!

  """Fetch all auctions that match the provided properties"""
  auctions(offset: Int = 0, limit: Int = 10, where: PartialAuctionInput!): [Auction!]!

  """Fetch all auctions by Status"""
  auctionsByStatus(offset: Int = 0, limit: Int = 10, status: AuctionStatus!): [Auction!]!
  proposal(id: Int!): Proposal!
  community(id: Int!): Community!
  communities: [Community!]!
  findByAddress(address: String!): Community!
}

type SignedDataPayload {
  signature: String!
  message: String!
  signer: String!
}

type Vote {
  address: String!
  signedData: SignedDataPayload!
  id: Int!
  direction: Int!
  createdDate: DateTime!
  proposalId: Int!
  auctionId: Int!
  weight: Int!
}

